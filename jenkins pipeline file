pipeline {
    agent any

    environment {
        AWS_REGION = 'ap-south-1'
        CLUSTER_NAME = 'Micheal'
        NODE_GROUP_NAME = 'standard-workers'
        NODE_TYPE = 't2.medium'
        NODES = '3'
        MIN_NODES = '1'
        MAX_NODES = '4'
        STORAGE_CLASS = 'ebs-sc'
        PVC_NAME = 'ebs-pvc'
        PVC_SIZE = '10Gi'
        HELM_RELEASE_NAME = 'my-wordpress'
        HELM_CHART = 'bitnami/wordpress'
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/Micheal-Joy18/syfe-project.git'
            }
        }

        stage('Setup EKS Cluster') {
            steps {
                script {
                    sh """
                    eksctl create cluster --name $project --region $ap-south-1 --nodegroup-name $micheal --node-type $t2.medium --nodes $3 --nodes-min $1 --nodes-max $4 --managed
                    aws eks --region $ap-south-1 update-kubeconfig --name $project
                    """
                }
            }
        }

        stage('Apply Kubernetes Manifests') {
            steps {
                script {
                    sh """
                    kubectl apply -f k8s/storageclass.yaml
                    kubectl apply -f k8s/pvc.yaml
                    kubectl apply -f k8s/wordpress-deployment.yaml
                    """
                }
            }
        }

        stage('Deploy with Helm') {
            steps {
                script {
                    sh """
                    helm repo add bitnami https://charts.bitnami.com/bitnami
                    helm repo update
                    helm install $HELM_RELEASE_NAME $HELM_CHART --set persistence.storageClass=$STORAGE_CLASS --set persistence.size=$PVC_SIZE
                    """
                }
            }
        }
    }

    post {
        always {
            script {
                sh """
                helm delete $HELM_RELEASE_NAME || true
                eksctl delete cluster --name $project || true
                """
            }
        }
    }
}
